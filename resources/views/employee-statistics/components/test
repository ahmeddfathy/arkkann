@push('scripts')
<script>
    // سكريبت خاص بعرض وإخفاء قواعد التقييم
    document.addEventListener('DOMContentLoaded', function() {
        const rulesToggleBtn = document.getElementById('rulesToggleBtn');
        const rulesCollapse = document.getElementById('rulesCollapse');
        const rulesIcon = document.getElementById('rulesIcon');

        if (rulesToggleBtn && rulesCollapse) {
            rulesToggleBtn.addEventListener('click', function() {
                // تبديل حالة العرض
                if (rulesCollapse.style.display === 'none') {
                    // عرض القواعد
                    rulesCollapse.style.display = 'block';
                    // إضافة تأثير حركي للعرض
                    rulesCollapse.style.opacity = '0';
                    rulesCollapse.style.transform = 'translateY(-10px)';
                    setTimeout(function() {
                        rulesCollapse.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                        rulesCollapse.style.opacity = '1';
                        rulesCollapse.style.transform = 'translateY(0)';
                    }, 10);
                    // تدوير الأيقونة
                    rulesIcon.classList.remove('fa-chevron-down');
                    rulesIcon.classList.add('fa-chevron-up');
                } else {
                    // إضافة تأثير حركي للإخفاء
                    rulesCollapse.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                    rulesCollapse.style.opacity = '0';
                    rulesCollapse.style.transform = 'translateY(-10px)';
                    setTimeout(function() {
                        rulesCollapse.style.display = 'none';
                    }, 300);
                    // تدوير الأيقونة
                    rulesIcon.classList.remove('fa-chevron-up');
                    rulesIcon.classList.add('fa-chevron-down');
                }
            });
        }
    });

    function showDetails(employeeId) {
        const startDate = document.getElementById('start_date').value;
        const endDate = document.getElementById('end_date').value;

        fetch(`/employee-statistics/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => response.json())
            .then(data => {
                const content = document.getElementById('modalContent');
                let html = `
                    <div class="text-center mb-4">
                        <h4>${data.employee.name}</h4>
                        <small class="text-muted">${data.employee.employee_id}</small>
                        <div class="mt-2">${data.employee.department || 'غير محدد'}</div>
                    </div>

                    <div class="row g-3">
                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">أيام العمل</div>
                                <span class="badge bg-secondary">
                                    ${data.statistics.total_working_days} يوم
                                </span>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">أيام الحضور</div>
                                <span class="badge bg-primary">
                                    ${data.statistics.actual_attendance_days} يوم
                                </span>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="text-center">
                                <div class="text-muted mb-2">نسبة الحضور</div>
                                <div class="progress" style="height: 25px;">
                                    <div class="progress-bar ${
                                        data.statistics.attendance_percentage >= 90 ? 'bg-success' :
                                        (data.statistics.attendance_percentage >= 75 ? 'bg-warning' : 'bg-danger')
                                    }"
                                    role="progressbar"
                                    style="width: ${data.statistics.attendance_percentage}%">
                                        ${data.statistics.attendance_percentage}%
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="text-center">
                                <div class="text-muted mb-2">الغياب</div>
                                <span class="badge bg-${data.statistics.absences > 0 ? 'danger' : 'success'}"
                                    style="cursor: pointer;"
                                    onclick="showAbsenceDetails('${data.employee.employee_id}', '${startDate}', '${endDate}')">
                                    ${data.statistics.absences} أيام
                                </span>
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="text-center">
                                <div class="text-muted mb-2">الأذونات</div>
                                <span class="badge bg-info"
                                    style="cursor: pointer;"
                                    onclick="showPermissionDetails('${data.employee.employee_id}', '${startDate}', '${endDate}')">
                                    ${data.statistics.permissions} مرات
                                </span>
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="text-center">
                                <div class="text-muted mb-2">الوقت الإضافي</div>
                                <span class="badge bg-primary"
                                    style="cursor: pointer;"
                                    onclick="showOvertimeDetails('${data.employee.employee_id}', '${startDate}', '${endDate}')">
                                    ${data.statistics.overtimes} ساعات
                                </span>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">إجمالي التأخير</div>
                                <span class="badge bg-${data.statistics.delays > 0 ? 'warning' : 'success'}">
                                    ${data.statistics.delays} دقيقة
                                </span>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">الإجازات المأخوذة</div>
                                <div>
                                    <span class="badge bg-info"
                                        style="cursor: pointer;"
                                        onclick="showLeaveDetails('${data.employee.employee_id}', '${startDate}', '${endDate}')">
                                        ${data.statistics.taken_leaves} يوم
                                    </span>
                                    <small class="text-muted d-block mt-1">من أصل ${data.employee.max_allowed_absence_days} يوم</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">الإجازات المتبقية</div>
                                <span class="badge ${data.statistics.remaining_leaves > 0 ? 'bg-success' : 'bg-danger'}">
                                    ${data.statistics.remaining_leaves} يوم
                                </span>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="text-center">
                                <div class="text-muted mb-2">إجازات الشهر الحالي</div>
                                <div>
                                    <span class="badge bg-purple"
                                        style="cursor: pointer;"
                                        onclick="showCurrentMonthLeaves('${data.employee.employee_id}', '${startDate}', '${endDate}')">
                                        ${data.statistics.current_month_leaves} يوم
                                    </span>
                                    <small class="text-muted d-block mt-1">
                                        ${new Date(startDate).toLocaleDateString('ar', { day: '2-digit', month: '2-digit' })} -
                                        ${new Date(endDate).toLocaleDateString('ar', { day: '2-digit', month: '2-digit' })}
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- سجل الحضور التفصيلي -->
                    <div class="mt-4">
                        <h6 class="border-bottom pb-2">
                            <i class="fas fa-calendar-check me-2"></i>سجل الحضور التفصيلي
                        </h6>
                        <div class="list-group mt-3">
                            ${data.statistics.attendance.map(record => `
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span>${record.attendance_date}</span>
                                        <span class="badge ${
                                            record.status === 'حضـور' ? 'bg-success' :
                                            record.status === 'غيــاب' ? 'bg-danger' :
                                            record.status === 'عطله إسبوعية' ? 'bg-info' : 'bg-secondary'
                                        }">${record.status}</span>
                                    </div>
                                    ${record.entry_time ? `
                                        <div class="small mt-1">
                                            <span>الدخول: ${record.entry_time}</span>
                                            ${record.exit_time ? `<span class="ms-2">الخروج: ${record.exit_time}</span>` : ''}
                                            ${record.delay_minutes > 0 ? `
                                                <span class="text-warning ms-2">
                                                    <i class="fas fa-clock"></i> تأخير: ${record.delay_minutes} دقيقة
                                                </span>
                                            ` : ''}
                                        </div>
                                    ` : ''}
                                </div>
                            `).join('')}
                        </div>
                    </div>

                    <!-- تفاصيل النقاط المخصومة -->
                    ${data.statistics.attendance_percentage < 100 || data.statistics.delays > 120 ? `
                    <div class="mt-4">
                        <h6 class="border-bottom pb-2">
                            <i class="fas fa-exclamation-triangle text-warning me-2"></i>تفاصيل النقاط المخصومة
                        </h6>

                        <div class="card mt-3 border-0 shadow-sm">
                            <div class="card-body">
                                <h6 class="fw-bold mb-3">تفاصيل تقييم الأداء</h6>

                                <div class="row">
                                    <!-- مؤشر الحضور -->
                                    <div class="col-md-4 mb-3">
                                        <div class="card h-100 ${data.statistics.attendance_percentage < 80 ? 'border-danger' : (data.statistics.attendance_percentage < 90 ? 'border-warning' : 'border-success')}">
                                            <div class="card-body p-3 text-center">
                                                <h6 class="card-title mb-1">الحضور</h6>
                                                <h3 class="mb-0 ${data.statistics.attendance_percentage < 80 ? 'text-danger' : (data.statistics.attendance_percentage < 90 ? 'text-warning' : 'text-success')}">
                                                    ${data.statistics.attendance_percentage}%
                                                </h3>
                                                <small class="text-muted">الوزن: 40% من التقييم الكلي</small>

                                                ${data.statistics.attendance_percentage < 100 ? `
                                                <div class="alert alert-light mt-2 mb-0 p-2 text-start">
                                                    <small>
                                                        <i class="fas fa-info-circle me-1"></i>
                                                        تم خصم <strong>${100 - data.statistics.attendance_percentage}%</strong> بسبب
                                                        الغياب لمدة <strong>${data.statistics.total_working_days - data.statistics.actual_attendance_days} أيام</strong>
                                                    </small>
                                                </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                    </div>

                                    <!-- مؤشر الانضباط -->
                                    <div class="col-md-4 mb-3">
                                        <div class="card h-100 ${data.statistics.delays > 120 ? 'border-danger' : 'border-success'}">
                                            <div class="card-body p-3 text-center">
                                                <h6 class="card-title mb-1">الانضباط</h6>
                                                <h3 class="mb-0 ${data.statistics.delays > 120 ? 'text-danger' : 'text-success'}">
                                                    ${data.statistics.delays <= 120 ? '100%' : Math.max(0, Math.round(100 - ((data.statistics.delays - 120) / 120) * 100)) + '%'}
                                                </h3>
                                                <small class="text-muted">الوزن: 40% من التقييم الكلي</small>

                                                ${data.statistics.delays > 120 ? `
                                                <div class="alert alert-light mt-2 mb-0 p-2 text-start">
                                                    <small>
                                                        <i class="fas fa-info-circle me-1"></i>
                                                        تم خصم <strong>${Math.min(100, Math.round(((data.statistics.delays - 120) / 120) * 100))}%</strong> بسبب
                                                        تجاوز التأخير <strong>${data.statistics.delays - 120} دقيقة</strong> عن الحد المسموح (120 دقيقة)
                                                    </small>
                                                </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                    </div>

                                    <!-- مؤشر ساعات العمل -->
                                    <div class="col-md-4 mb-3">
                                        <div class="card h-100 border-info">
                                            <div class="card-body p-3 text-center">
                                                <h6 class="card-title mb-1">ساعات العمل</h6>
                                                <h3 class="mb-0 text-info">
                                                    ${typeof data.statistics.average_working_hours !== 'undefined' ?
                                                    Math.min(100, Math.round((data.statistics.average_working_hours / 8) * 100)) + '%' :
                                                    '-'}
                                                </h3>
                                                <small class="text-muted">الوزن: 20% من التقييم الكلي</small>

                                                ${typeof data.statistics.average_working_hours !== 'undefined' && data.statistics.average_working_hours < 8 ? `
                                                <div class="alert alert-light mt-2 mb-0 p-2 text-start">
                                                    <small>
                                                        <i class="fas fa-info-circle me-1"></i>
                                                        متوسط ساعات العمل <strong>${data.statistics.average_working_hours}</strong> من أصل <strong>8</strong> ساعات
                                                    </small>
                                                </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- تأثير النقاط المخصومة -->
                                <div class="mt-3 pt-3 border-top">
                                    <h6 class="mb-3">التأثير على النتيجة النهائية</h6>

                                    <ul class="list-unstyled mb-0">
                                        ${data.statistics.attendance_percentage < 100 ? `
                                        <li class="mb-2">
                                            <i class="fas fa-minus-circle text-danger me-1"></i>
                                            خصم <strong>${Math.round((100 - data.statistics.attendance_percentage) * 0.4, 1)}%</strong>
                                            من التقييم النهائي بسبب الغياب
                                        </li>
                                        ` : ''}

                                        ${data.statistics.delays > 120 ? `
                                        <li class="mb-2">
                                            <i class="fas fa-minus-circle text-danger me-1"></i>
                                            خصم <strong>${Math.round(Math.min(100, ((data.statistics.delays - 120) / 120) * 100) * 0.4, 1)}%</strong>
                                            من التقييم النهائي بسبب التأخير
                                        </li>
                                        ` : ''}

                                        ${typeof data.statistics.average_working_hours !== 'undefined' && data.statistics.average_working_hours < 8 ? `
                                        <li class="mb-2">
                                            <i class="fas fa-minus-circle text-danger me-1"></i>
                                            خصم <strong>${Math.round((100 - Math.min(100, Math.round((data.statistics.average_working_hours / 8) * 100))) * 0.2, 1)}%</strong>
                                            من التقييم النهائي بسبب قلة ساعات العمل
                                        </li>
                                        ` : ''}
                                    </ul>
                                </div>

                                <!-- النتيجة النهائية -->
                                <div class="mt-3 pt-3 border-top">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">النتيجة النهائية</h6>

                                        <div class="text-center">
                                            <span class="badge bg-${
                                                calculateOverallScore(data) >= 90 ? 'success' :
                                                (calculateOverallScore(data) >= 80 ? 'primary' :
                                                (calculateOverallScore(data) >= 70 ? 'info' :
                                                (calculateOverallScore(data) >= 60 ? 'warning' : 'danger')))
                                            } p-2 fs-6">
                                                ${calculateOverallScore(data)}%
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    ` : ''}
                `;

                content.innerHTML = html;
                new bootstrap.Modal(document.getElementById('detailsModal')).show();
            });
    }

    // دالة حساب النتيجة النهائية للأداء
    function calculateOverallScore(data) {
        let attendanceScore = data.statistics.attendance_percentage;

        let punctualityScore = 100;
        if (data.statistics.delays > 120) {
            let excessDelays = data.statistics.delays - 120;
            punctualityScore = Math.max(0, 100 - ((excessDelays / 120) * 100));
        }

        let workingHoursScore = 100;
        if (typeof data.statistics.average_working_hours !== 'undefined') {
            workingHoursScore = Math.min(100, Math.round((data.statistics.average_working_hours / 8) * 100));
        }

        // استخدام النسب الجديدة للتقييم (الحضور 45%، الانضباط 20%، ساعات العمل 35%)
        let overallScore = Math.round((attendanceScore * 0.45) + (punctualityScore * 0.2) + (workingHoursScore * 0.35));
        return overallScore;
    }

    // Animation for new rows
    document.addEventListener('DOMContentLoaded', function() {
        gsap.from(".request-row", {
            duration: 0.5,
            opacity: 0,
            y: 20,
            stagger: 0.1
        });
    });

    // إزالة قيود التاريخ
    document.addEventListener('DOMContentLoaded', function() {
        const dateInputs = document.querySelectorAll('input[type="date"]');
        dateInputs.forEach(input => {
            // إزالة أي قيود
            input.removeAttribute('min');
            input.removeAttribute('max');

            // منع أي أحداث JavaScript تقيد اختيار التاريخ
            input.addEventListener('mousedown', function(e) {
                e.stopPropagation();
            }, true);
        });
    });

    // إضافة دالة لتعيين التواريخ الافتراضية
    function setDefaultDates() {
        const now = new Date();
        const saturday = new Date(now);
        saturday.setDate(now.getDate() - now.getDay() + 6); // السبت الماضي

        const thursday = new Date(saturday);
        thursday.setDate(saturday.getDate() + 5); // الخميس القادم

        document.getElementById('start_date').value = saturday.toISOString().split('T')[0];
        document.getElementById('end_date').value = thursday.toISOString().split('T')[0];
    }

    // تعيين التواريخ الافتراضية عند تحميل الصفحة إذا لم يتم تحديد تواريخ
    document.addEventListener('DOMContentLoaded', function() {
        if (!document.getElementById('start_date').value || !document.getElementById('end_date').value) {
            setDefaultDates();
        }
    });

    // دالة عرض تفاصيل الغياب
    function showAbsenceDetails(employeeId, startDate, endDate) {
        console.log('Fetching absences:', { employeeId, startDate, endDate });

        fetch(`/employee-statistics/absences/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Received absences data:', data);
                const modalTitle = document.getElementById('detailsDataModalTitle');
                const content = document.getElementById('detailsDataContent');

                modalTitle.textContent = 'تفاصيل الغياب';

                if (!data || data.length === 0) {
                    content.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            لا يوجد غياب في هذه الفترة
                        </div>
                    `;
                } else {
                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>التاريخ</th>
                                        <th>السبب</th>
                                        <th>الحالة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.map(record => `
                                        <tr>
                                            <td>${record.date}</td>
                                            <td>${record.reason}</td>
                                            <td>
                                                <span class="badge bg-danger">
                                                    ${record.status}
                                                </span>
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                    content.innerHTML = html;
                }

                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                const content = document.getElementById('detailsDataContent');
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        حدث خطأ أثناء جلب البيانات
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            });
    }

    // دالة عرض تفاصيل الإذونات
    function showPermissionDetails(employeeId, startDate, endDate) {
        console.log('Fetching permissions:', { employeeId, startDate, endDate });

        fetch(`/employee-statistics/permissions/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Received permissions data:', data);
                const modalTitle = document.getElementById('detailsDataModalTitle');
                const content = document.getElementById('detailsDataContent');

                modalTitle.textContent = 'تفاصيل الأذونات';

                if (!data || data.length === 0) {
                    content.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            لا توجد إذونات في هذه الفترة
                        </div>
                    `;
                } else {
                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>التاريخ</th>
                                        <th>وقت المغادرة</th>
                                        <th>وقت العودة</th>
                                        <th>عدد الساعات</th>
                                        <th>السبب</th>
                                        <th>الحالة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.map(record => `
                                        <tr>
                                            <td>${record.date}</td>
                                            <td>${record.departure_time}</td>
                                            <td>${record.return_time}</td>
                                            <td>${record.minutes} دقيقة</td>
                                            <td>${record.reason || 'غير محدد'}</td>
                                            <td>
                                                <span class="badge bg-success">
                                                    ${record.status}
                                                </span>
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                    content.innerHTML = html;
                }

                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                const content = document.getElementById('detailsDataContent');
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        حدث خطأ أثناء جلب البيانات
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            });
    }

    // دالة عرض تفاصيل الوقت الإضافي
    function showOvertimeDetails(employeeId, startDate, endDate) {
        console.log('Fetching overtimes:', { employeeId, startDate, endDate });

        fetch(`/employee-statistics/overtimes/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Received overtimes data:', data);
                const modalTitle = document.getElementById('detailsDataModalTitle');
                const content = document.getElementById('detailsDataContent');

                modalTitle.textContent = 'تفاصيل الوقت الإضافي';

                if (!data || data.length === 0) {
                    content.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            لا يوجد وقت إضافي في هذه الفترة
                        </div>
                    `;
                } else {
                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>التاريخ</th>
                                        <th>وقت البداية</th>
                                        <th>وقت النهاية</th>
                                        <th>عدد الساعات</th>
                                        <th>السبب</th>
                                        <th>الحالة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.map(record => `
                                        <tr>
                                            <td>${record.date}</td>
                                            <td>${record.start_time}</td>
                                            <td>${record.end_time}</td>
                                            <td>${record.minutes} دقيقة</td>
                                            <td>${record.reason || 'غير محدد'}</td>
                                            <td>
                                                <span class="badge bg-success">
                                                    ${record.status}
                                                </span>
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                    content.innerHTML = html;
                }

                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                const content = document.getElementById('detailsDataContent');
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        حدث خطأ أثناء جلب البيانات
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            });
    }

    // دالة عرض تفاصيل الإجازات
    function showLeaveDetails(employeeId, startDate, endDate) {
        fetch(`/employee-statistics/leaves/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const modalTitle = document.getElementById('detailsDataModalTitle');
                const content = document.getElementById('detailsDataContent');

                const year = new Date(startDate).getFullYear();
                modalTitle.textContent = `تفاصيل الإجازات لسنة ${year}`;

                if (!data || data.length === 0) {
                    content.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            لا توجد إجازات في هذه السنة
                        </div>
                    `;
                } else {
                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>التاريخ</th>
                                        <th>السبب</th>
                                        <th>الحالة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.map(record => `
                                        <tr>
                                            <td>${record.date}</td>
                                            <td>${record.reason || 'غير محدد'}</td>
                                            <td>
                                                <span class="badge bg-success">
                                                    ${record.status}
                                                </span>
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                    content.innerHTML = html;
                }

                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                const content = document.getElementById('detailsDataContent');
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        حدث خطأ أثناء جلب البيانات
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            });
    }

    // دالة عرض تفاصيل إجازات الشهر الحالي
    function showCurrentMonthLeaves(employeeId, startDate, endDate) {
        console.log('Fetching leaves for:', { employeeId, startDate, endDate });

        fetch(`/employee-statistics/current-month-leaves/${employeeId}?start_date=${startDate}&end_date=${endDate}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Received data:', data);
                const modalTitle = document.getElementById('detailsDataModalTitle');
                const content = document.getElementById('detailsDataContent');

                modalTitle.textContent = 'تفاصيل إجازات الشهر الحالي';

                if (!data || data.length === 0) {
                    content.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            لا توجد إجازات في هذه الفترة
                        </div>
                    `;
                } else {
                    let html = `
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>التاريخ</th>
                                        <th>السبب</th>
                                        <th>الحالة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.map(record => `
                                        <tr>
                                            <td>${record.date}</td>
                                            <td>${record.reason || 'غير محدد'}</td>
                                            <td>
                                                <span class="badge bg-success">
                                                    ${record.status}
                                                </span>
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                    content.innerHTML = html;
                }

                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                const content = document.getElementById('detailsDataContent');
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        حدث خطأ أثناء جلب البيانات
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('detailsDataModal')).show();
            });
    }

    // Charts initialization
    document.addEventListener('DOMContentLoaded', function() {
        // تم استبدال كود تهيئة collapse بكود جديد أعلاه في السكريبت

        const employeesData = JSON.parse('@json($employees->items())'.replace(/&quot;/g, '"'));

        if (employeesData.length === 0) return;

        // Attendance Chart
        const attendanceCtx = document.getElementById('attendanceChart').getContext('2d');
        new Chart(attendanceCtx, {
            type: 'doughnut',
            data: {
                labels: ['أيام الحضور', 'أيام الغياب'],
                datasets: [{
                    data: [
                        employeesData.reduce((sum, emp) => sum + emp.actual_attendance_days, 0),
                        employeesData.reduce((sum, emp) => sum + emp.absences, 0)
                    ],
                    backgroundColor: ['#28a745', '#dc3545'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            font: {
                                size: 14
                            }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const value = context.raw;
                                const percentage = Math.round((value / total) * 100);
                                return `${context.label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });

        // Leaves Chart
        const leavesCtx = document.getElementById('leavesChart').getContext('2d');
        new Chart(leavesCtx, {
            type: 'bar',
            data: {
                labels: ['الإجازات المأخوذة', 'الإجازات المتبقية', 'الأذونات'],
                datasets: [{
                    label: 'عدد الأيام',
                    data: [
                        employeesData.reduce((sum, emp) => sum + emp.taken_leaves, 0),
                        employeesData.reduce((sum, emp) => sum + emp.remaining_leaves, 0),
                        employeesData.reduce((sum, emp) => sum + emp.permissions, 0)
                    ],
                    backgroundColor: ['#17a2b8', '#28a745', '#ffc107'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Time Chart (Delays and Overtime)
        const timeCtx = document.getElementById('timeChart').getContext('2d');
        new Chart(timeCtx, {
            type: 'bar',
            data: {
                labels: employeesData.map(emp => emp.name),
                datasets: [
                    {
                        label: 'دقائق التأخير',
                        data: employeesData.map(emp => emp.delays),
                        backgroundColor: '#ffc107',
                        borderWidth: 1
                    },
                    {
                        label: 'ساعات العمل الإضافي',
                        data: employeesData.map(emp => emp.overtimes),
                        backgroundColor: '#007bff',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        ticks: {
                            autoSkip: true,
                            maxRotation: 45,
                            minRotation: 45
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });
    });

    document.addEventListener("DOMContentLoaded", function() {

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                html: true,
                container: 'body'
            });
        });


    });
</script>
@endpush
